[{"E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\index.js":"1","E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\App.js":"2","E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\reportWebVitals.js":"3","E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\component\\Edit.js":"4","E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\component\\Display.js":"5","E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\component\\login.js":"6","E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\component\\User.js":"7"},{"size":237,"mtime":1609145788000,"results":"8","hashOfConfig":"9"},{"size":658,"mtime":1610972024223,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":3673,"mtime":1609390474141,"results":"12","hashOfConfig":"9"},{"size":3712,"mtime":1611303031359,"results":"13","hashOfConfig":"9"},{"size":3225,"mtime":1611302889314,"results":"14","hashOfConfig":"9"},{"size":1189,"mtime":1611302973372,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"byrk3l",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\index.js",[],["33","34"],"E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\App.js",[],"E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\reportWebVitals.js",[],"E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\component\\Edit.js",["35"],"import React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nconsole.log(React.version);\n\nfunction Edit(props) {\n  const { id } = useParams();\n  console.log(id);\n  let history = useHistory();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const { register, handleSubmit, errors } = useForm();\n\n  //update api\n  const onSubmit = async (e) => {\n    const res = await axios.put(`http://localhost:4000/edit/${id}`, {\n      FirstName: firstName.toLowerCase(),\n      LastName: lastName.toLowerCase(),\n      email: email,\n      role: role.toLowerCase(),\n    });\n    console.log(\"res\", res.data.user);\n\n    if (res.data.message === \"User updated successfully!\") {\n      history.push(\"/dis\");\n    } else {\n      setData(res.data.message);\n    }\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []); //[] is for runiing only 1 time\n\n  //get user detials by id\n\n  const loadUsers = async () => {\n    const result = await axios.get(`http://localhost:4000/edit/${id}`);\n    console.log(\"result\", result);\n    setFirstName(result.data.users.FirstName);\n    setLastName(result.data.users.LastName);\n    setEmail(result.data.users.email);\n    setRole(result.data.users.role);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"w-75 mx-auto shadow p-5\">\n        <h2 className=\"text-center mb-4\">Update User</h2>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {errors.firstName && \"First name is required\"}\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              className=\"form-control form-control-lg\"\n              placeholder=\"FirstName\"\n              value={firstName}\n              ref={register({ required: true })}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n          </div>\n          {errors.lastName && \"Last name is required.\"}\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              className=\"form-control form-control-lg\"\n              placeholder=\"Enter Your Lastname\"\n              value={lastName}\n              ref={register({ required: true })}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n          </div>\n          {errors.lastName && \"Entered value does not match email format.\"}\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control form-control-lg\"\n              placeholder=\"Enter Your E-mail Address\"\n              value={email}\n              ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          {errors.role && \"role is required.\"}\n\n          <div className=\"form-group\">\n            <input\n              type=\"type\"\n              className=\"form-control form-control-lg\"\n              name=\"role\"\n              placeholder=\"Enter Your Role\"\n              value={role}\n              ref={register({ required: true })}\n              onChange={(e) => setRole(e.target.value)}\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\n            Login\n          </button>\n        </form>\n        <h1>{data}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Edit;\n","E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\component\\Display.js",["36"],"import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n//import ReactPaginate from \"react-paginate\";\n\nconst Display = () => {\n\n\tconst [users, setUser] = useState([]);\n\tconst [searchName, setSearchName] = useState('');\n\tconst [rolefilter, setRoleFilter] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tloadUsers();\n\t}, []); //[] is for running only 1 time\n\n\t//searching  Api call\n\tuseEffect(() => {\n\t\tconst search = async () => {\n\t\t\tconst result = await axios.get(`http://localhost:4000/search?LastName=${searchName}`);\n\n\t\t\tconsole.log('search_result', result);\n\t\t\tsetUser(result.data.result);\n\t\t};\n\t\tsearch();\n\t}, [searchName]);\n\n\t//Display api call\n\tconst loadUsers = async () => {\n\t\tconst result = await axios.get('http://localhost:4000/display');\n\t\tconsole.log('result', result.data.user);\n\t\tsetUser(result.data.user);\n\t\tsetRoleFilter(result.data.user);\n\t\tconsole.log('usersss', rolefilter);\n\t};\n\n\t//delete call\n\tconst deleteUser = async (id) => {\n\t\tawait axios.delete(`http://localhost:4000/delete/${id}`);\n\t\t// console.log(\"front end  delete\");\n\t\tloadUsers();\n\t};\n\n\t//Dropdown Filter Code\n\tconst FilterDropdown = async(Dropdown)=> {\n\n\t\tconst result = await axios.get(`http://localhost:4000/display/${Dropdown}`);\n\t\tif(Dropdown === 'all'){\n\t\t\tsetUser(rolefilter);\n\t\t}\telse{\n\t\t\tsetUser(result.data.user);\n\t\t}\t\n\t};\t\t\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className='py-4'>\n\t\t\t\t<h1> All Users Page! </h1>\n\t\t\t\t<div>\n\t\t\t\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='form-group'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Username search'\n\t\t\t\t\t\tvalue={searchName}\n\t\t\t\t\t\tonChange={(e) => setSearchName(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<t /> <t />\n\n\t\t\t\t\t<select className='form-group'\n\t\t\t\t\tonChange={(e) => FilterDropdown(e.target.value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value='all'>all</option>\n\t\t\t\t\t\t<option value='artist'>artist</option>\n\t\t\t\t\t\t<option value='designer'>designer</option>\n\t\t\t\t\t\t<option value='manager'>manager</option>\n\t\t\t\t\t</select>\n\t\t\n\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<table className='table border shadow'>\n\t\t\t\t\t\n\t\t\t\t\t<thead className='thead-dark'>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th scope='col'> Id </th>\n\t\t\t\t\t\t\t<th scope='col'> FirstName </th>\n\t\t\t\t\t\t\t<th scope='col'> LastName </th>\n\t\t\t\t\t\t\t<th scope='col'> Email </th>\n\t\t\t\t\t\t\t<th scope='col'> Role </th>\n\t\t\t\t\t\t\t<th> Action </th>\n\t\t\t\t\t\t\t<th>\t<Link className='btn btn-primary  mr-2' to={`/`}>\n\t\t\t\t\t\t\t\t\t\tAdd Users\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\n\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{users.map((user, index) => (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope='row'> {user._id} </th>\n\t\t\t\t\t\t\t\t<td> {user.FirstName} </td> <td> {user.LastName} </td> <td> {user.email} </td>{' '}\n\t\t\t\t\t\t\t\t<td> {user.role} </td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Link className='btn btn-primary  mr-2' to={`/user/${user._id}`}>\n\t\t\t\t\t\t\t\t\t\tView\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<Link className='btn btn-success  mr-2' to={`/edit/${user._id}`}>\n\t\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-danger mr-2' onClick={() => deleteUser(user._id)}>\n\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t\n\t\t\t\t<div>\n         {/* <ReactPaginate\n            previousLabel={\"previous\"}\n            nextLabel={\"next\"}\n            pageCount={page_Count}\n            //onPageChange={handlePageClick}\n            containerClassName={\"pagination containerClassName\"}\n            previousLinkClassName={\"previousLinkClassName\"}\n            nextLinkClassName={\"nextLinkClassName\"}\n            pageClassName={\"pageClassName\"}\n            disabledClassName={\"disabledClassName\"}\n            activeClassName={\"activeClassName\"}\n          />  */}\n        </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Display;\n","E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\component\\login.js",[],"E:\\Nodejs_Rectjs_Practice 2020_dec\\Search_drop_filter_Crud_both\\front-end\\src\\component\\User.js",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":40,"column":6,"nodeType":"44","endLine":40,"endColumn":8,"suggestions":"45"},{"ruleId":"42","severity":1,"message":"43","line":15,"column":5,"nodeType":"44","endLine":15,"endColumn":7,"suggestions":"46"},{"ruleId":"42","severity":1,"message":"47","line":16,"column":5,"nodeType":"44","endLine":16,"endColumn":7,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUsers'. Either include it or remove the dependency array.","ArrayExpression",["51"],["52"],"React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},{"desc":"54","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [loadUsers]",{"range":"59","text":"60"},{"range":"61","text":"60"},"Update the dependencies array to be: [loadUser]",{"range":"62","text":"63"},[1100,1102],"[loadUsers]",[393,395],[417,419],"[loadUser]"]